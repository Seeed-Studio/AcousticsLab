#pragma once
#ifndef LIS3DHTR_H
#define LIS3DHTR_H

#include <driver/i2c_master.h>
#include <esp_err.h>

#include <cstdint>

namespace driver {

#define LIS3DHTR_DEFAULT_ADDRESS (0x18)
#define LIS3DHTR_ADDRESS_UPDATED (0x19)

#define LIS3DHTR_CONVERSIONDELAY (10)

#define LIS3DHTR_REG_ACCEL_STATUS        (0x07)
#define LIS3DHTR_REG_ACCEL_OUT_ADC1_L    (0x28)
#define LIS3DHTR_REG_ACCEL_OUT_ADC1_H    (0x29)
#define LIS3DHTR_REG_ACCEL_OUT_ADC2_L    (0x2A)
#define LIS3DHTR_REG_ACCEL_OUT_ADC2_H    (0x2B)
#define LIS3DHTR_REG_ACCEL_OUT_ADC3_L    (0x2C)
#define LIS3DHTR_REG_ACCEL_OUT_ADC3_H    (0x2D)
#define LIS3DHTR_REG_ACCEL_WHO_AM_I      (0x0F)
#define LIS3DHTR_REG_TEMP_CFG            (0x1F)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1     (0x20)
#define LIS3DHTR_REG_ACCEL_CTRL_REG2     (0x21)
#define LIS3DHTR_REG_ACCEL_CTRL_REG3     (0x22)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4     (0x23)
#define LIS3DHTR_REG_ACCEL_CTRL_REG5     (0x24)
#define LIS3DHTR_REG_ACCEL_CTRL_REG6     (0x25)
#define LIS3DHTR_REG_ACCEL_REFERENCE     (0x26)
#define LIS3DHTR_REG_ACCEL_STATUS2       (0x27)
#define LIS3DHTR_REG_ACCEL_OUT_X_L       (0x28)
#define LIS3DHTR_REG_ACCEL_OUT_X_H       (0x29)
#define LIS3DHTR_REG_ACCEL_OUT_Y_L       (0x2A)
#define LIS3DHTR_REG_ACCEL_OUT_Y_H       (0x2B)
#define LIS3DHTR_REG_ACCEL_OUT_Z_L       (0x2C)
#define LIS3DHTR_REG_ACCEL_OUT_Z_H       (0x2D)
#define LIS3DHTR_REG_ACCEL_FIFO_CTRL     (0x2E)
#define LIS3DHTR_REG_ACCEL_FIFO_SRC      (0x2F)
#define LIS3DHTR_REG_ACCEL_INT1_CFG      (0x30)
#define LIS3DHTR_REG_ACCEL_INT1_SRC      (0x31)
#define LIS3DHTR_REG_ACCEL_INT1_THS      (0x32)
#define LIS3DHTR_REG_ACCEL_INT1_DURATION (0x33)
#define LIS3DHTR_REG_ACCEL_CLICK_CFG     (0x38)
#define LIS3DHTR_REG_ACCEL_CLICK_SRC     (0x39)
#define LIS3DHTR_REG_ACCEL_CLICK_THS     (0x3A)
#define LIS3DHTR_REG_ACCEL_TIME_LIMIT    (0x3B)
#define LIS3DHTR_REG_ACCEL_TIME_LATENCY  (0x3C)
#define LIS3DHTR_REG_ACCEL_TIME_WINDOW   (0x3D)

#define LIS3DHTR_REG_TEMP_ADC_PD_MASK     (0x80)
#define LIS3DHTR_REG_TEMP_ADC_PD_DISABLED (0x00)
#define LIS3DHTR_REG_TEMP_ADC_PD_ENABLED  (0x80)

#define LIS3DHTR_REG_TEMP_TEMP_EN_MASK     (0x40)
#define LIS3DHTR_REG_TEMP_TEMP_EN_DISABLED (0x00)
#define LIS3DHTR_REG_TEMP_TEMP_EN_ENABLED  (0x40)

#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_MASK (0xF0)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_PD   (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_1    (0x10)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_10   (0x20)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_25   (0x30)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_50   (0x40)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_100  (0x50)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_200  (0x60)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_400  (0x70)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_1_6K (0x80)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_5K   (0x90)

#define LIS3DHTR_REG_ACCEL_CTRL_REG1_LPEN_MASK   (0x08)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_LPEN_NORMAL (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_LPEN_LOW    (0x08)

#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AZEN_MASK    (0x04)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AZEN_DISABLE (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AZEN_ENABLE  (0x04)

#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AYEN_MASK    (0x02)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AYEN_DISABLE (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AYEN_ENABLE  (0x02)

#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AXEN_MASK    (0x01)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AXEN_DISABLE (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG1_AXEN_ENABLE  (0x01)

#define LIS3DHTR_CTRL_REG2_HPM_MASK      (0xC0)
#define LIS3DHTR_CTRL_REG2_HPM_NORMAL    (0x00)
#define LIS3DHTR_CTRL_REG2_HPM_REF       (0x40)
#define LIS3DHTR_CTRL_REG2_HPM_NORMAL1   (0x80)
#define LIS3DHTR_CTRL_REG2_HPM_AUTORESET (0xC0)

#define LIS3DHTR_CTRL_REG2_HPCF_MASK (0x30)
#define LIS3DHTR_CTRL_REG2_HPCF_NONE (0x00)

#define LIS3DHTR_CTRL_REG2_FDS_MASK    (0x08)
#define LIS3DHTR_CTRL_REG2_FDS_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG2_FDS_ENABLE  (0x08)

#define LIS3DHTR_CTRL_REG2_HPCLICK_MASK    (0x04)
#define LIS3DHTR_CTRL_REG2_HPCLICK_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG2_HPCLICK_ENABLE  (0x04)

#define LIS3DHTR_CTRL_REG2_HP_IA2_MASK    (0x02)
#define LIS3DHTR_CTRL_REG2_HP_IA2_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG2_HP_IA2_ENABLE  (0x02)

#define LIS3DHTR_CTRL_REG2_HP_IA1_MASK    (0x01)
#define LIS3DHTR_CTRL_REG2_HP_IA1_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG2_HP_IA1_ENABLE  (0x01)

#define LIS3DHTR_CTRL_REG3_CLICK_MASK    (0x80)
#define LIS3DHTR_CTRL_REG3_CLICK_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG3_CLICK_ENABLE  (0x80)

#define LIS3DHTR_CTRL_REG3_IA1_MASK    (0x40)
#define LIS3DHTR_CTRL_REG3_IA1_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG3_IA1_ENABLE  (0x40)

#define LIS3DHTR_CTRL_REG3_IA2_MASK    (0x20)
#define LIS3DHTR_CTRL_REG3_IA2_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG3_IA2_ENABLE  (0x20)

#define LIS3DHTR_CTRL_REG3_ZXYDA_MASK    (0x10)
#define LIS3DHTR_CTRL_REG3_ZXYDA_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG3_ZXYDA_ENABLE  (0x10)

#define LIS3DHTR_CTRL_REG3_321DA_MASK    (0x08)
#define LIS3DHTR_CTRL_REG3_321DA_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG3_321DA_ENABLE  (0x08)

#define LIS3DHTR_CTRL_REG3_WTM_MASK    (0x04)
#define LIS3DHTR_CTRL_REG3_WTM_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG3_WTM_ENABLE  (0x04)

#define LIS3DHTR_CTRL_REG3_OVERRUN_MASK    (0x02)
#define LIS3DHTR_CTRL_REG3_OVERRUN_DISABLE (0x00)
#define LIS3DHTR_CTRL_REG3_OVERRUN_ENABLE  (0x02)

#define LIS3DHTR_REG_ACCEL_CTRL_REG4_BDU_MASK       (0x80)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_BDU_CONTINUOUS (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_BDU_NOTUPDATED (0x80)

#define LIS3DHTR_REG_ACCEL_CTRL_REG4_BLE_MASK (0x40)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_BLE_LSB  (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_BLE_MSB  (0x40)

#define LIS3DHTR_REG_ACCEL_CTRL_REG4_FS_MASK (0x30)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_FS_2G   (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_FS_4G   (0x10)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_FS_8G   (0x20)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_FS_16G  (0x30)

#define LIS3DHTR_REG_ACCEL_CTRL_REG4_HS_MASK    (0x08)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_HS_DISABLE (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_HS_ENABLE  (0x08)

#define LIS3DHTR_REG_ACCEL_CTRL_REG4_ST_MASK   (0x06)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_ST_NORMAL (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_ST_0      (0x02)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_ST_1      (0x04)

#define LIS3DHTR_REG_ACCEL_CTRL_REG4_SIM_MASK  (0x01)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_SIM_4WIRE (0x00)
#define LIS3DHTR_REG_ACCEL_CTRL_REG4_SIM_3WIRE (0x01)

#define LIS3DHTR_REG_ACCEL_STATUS2_UPDATE_MASK (0x08)

enum lis3dhtr_power_type_t : uint8_t {
    POWER_MODE_NORMAL = LIS3DHTR_REG_ACCEL_CTRL_REG1_LPEN_NORMAL,
    POWER_MODE_LOW = LIS3DHTR_REG_ACCEL_CTRL_REG1_LPEN_LOW,
};

enum lis3dhtr_scale_type_t : uint8_t {
    LIS3DHTR_RANGE_2G = LIS3DHTR_REG_ACCEL_CTRL_REG4_FS_2G,
    LIS3DHTR_RANGE_4G = LIS3DHTR_REG_ACCEL_CTRL_REG4_FS_4G,
    LIS3DHTR_RANGE_8G = LIS3DHTR_REG_ACCEL_CTRL_REG4_FS_8G,
    LIS3DHTR_RANGE_16G = LIS3DHTR_REG_ACCEL_CTRL_REG4_FS_16G,
};

enum lis3dhtr_odr_type_t : uint8_t {
    LIS3DHTR_DATARATE_POWERDOWN = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_PD,
    LIS3DHTR_DATARATE_1HZ = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_1,
    LIS3DHTR_DATARATE_10HZ = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_10,
    LIS3DHTR_DATARATE_25HZ = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_25,
    LIS3DHTR_DATARATE_50HZ = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_50,
    LIS3DHTR_DATARATE_100HZ = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_100,
    LIS3DHTR_DATARATE_200HZ = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_200,
    LIS3DHTR_DATARATE_400HZ = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_400,
    LIS3DHTR_DATARATE_1_6KH = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_1_6K,
    LIS3DHTR_DATARATE_5KHZ = LIS3DHTR_REG_ACCEL_CTRL_REG1_AODR_5K,
};

class LIS3DHTR final
{
public:
    LIS3DHTR();
    ~LIS3DHTR();

    int init(int sda_pin, int scl_pin, i2c_port_num_t i2c_port = -1, size_t clk_speed_hz = 400000,
        int timeout_ms = 1000);
    void deinit();

    int setPowerMode(lis3dhtr_power_type_t mode, int timeout_ms = 1000);
    int setFullScaleRange(lis3dhtr_scale_type_t range, int timeout_ms = 1000);
    int setOutputDataRate(lis3dhtr_odr_type_t odr, int timeout_ms = 1000);
    int setHighSolution(bool enable, int timeout_ms = 1000);

    int getAcceleration(float &x, float &y, float &z, int timeout_ms = 1000);
    int getTemperature(int16_t &temperature, int timeout_ms = 1000);
    int getDeviceID(uint8_t &device_id, int timeout_ms = 1000);

private:
    esp_err_t _writeRegister(uint8_t reg, const uint8_t *data, size_t len, int timeout_ms = -1);
    esp_err_t _readRegister(uint8_t reg, uint8_t *data, size_t len, int timeout_ms = -1);

    void _updateAccelShiftAndScale();

    i2c_master_bus_config_t _i2c_mst_config;
    i2c_master_bus_handle_t _bus_handle;
    i2c_device_config_t _dev_config;
    i2c_master_dev_handle_t _dev_handle;

    uint8_t _power_mode;
    uint8_t _full_scale_range;
    uint8_t _high_solution;

    uint8_t _accel_shift;
    float _accel_scale;
};

} // namespace driver

#endif
